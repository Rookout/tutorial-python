import org.rookout.files.Utilities
import org.rookout.testsUtil.TestUtilities

def label = "worker-${UUID.randomUUID().toString()}"

podCreator.initMain(label: label) {
    node(label) {
        print(pwd())
        container('rookout-helm') {
            stage ('Getting test') {
            def myRepo = checkout scm
            env.GIT_BRANCH = myRepo.GIT_BRANCH.replaceAll('/|_', '-')
            if ("master".equals(env.GIT_BRANCH)) {
                def scriptToUse = libraryResource 'generate_tests.groovy'
                def jobName = "tutorial-python"
                def dockerTag = TestUtilities.getDockerTagNameForRegression(jobName)
                sh('docker build . -t ${dockerTag} --build-arg GIT_COMMIT=$(git rev-parse HEAD) --build-arg GIT_ORIGIN=$(git config --get remote.origin.url) && gcloud docker -- push ${dockerTag}')
                TestUtilities.createTest(this, scriptToUse, jobName, pwd() + "/.jenkins", "Jenkinsfile.test")
                stage ('Run the tests') {
                    def rookoutVersionInFile = sh(script: "cat ${pwd()}/requirements.txt | grep 'rook' | cut -d '=' -f 2", returnStdout: true)
                    def cleanRookoutVersionInFile = rookoutVersionInFile.toString().trim()
                    println("Version: ${cleanRookoutVersionInFile}!")
                    triggerer.regression(GIT_BRANCH : "Rooks/Python-v${cleanRookoutVersionInFile}", EXTRACT_VERSION_FROM_BRANCH: true ){
                    }
                }
            }
            
        }
    }

    }
}